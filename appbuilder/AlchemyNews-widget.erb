<script>

    // format the news for display
    function displayModel(response) {
        var container = $(".result").empty();
        if (response["status"] == "ERROR") {
            console.log(response["statusInfo"]);
            container.append("News results unavailable at this time.");
        }
        if (response["result"].hasOwnProperty('docs')) {
            var docsArray = response["result"]["docs"];
            var numDocs = docsArray.length;
            for (var i = 0; i < numDocs; ++i) {
                var sourceArray = docsArray[i]["source"];
                var enriched_data = sourceArray["enriched"];
                var urlArray = enriched_data["url"];
                var title = urlArray["title"];
                var newsUrl = urlArray["url"];
                var publicationDate = urlArray["publicationDate"];
                var date = publicationDate["date"];
                var concepts = urlArray["concepts"];
                var numConcepts = concepts.length;
                var conceptInfor = concepts[0]["text"];
                for (var j = 1; j < numConcepts; ++j) {
                    var conceptInfor = conceptInfor + ", " + concepts[j]["text"];
                }
                var domain = newsUrl.replace('http://', '').replace('https://', '').split(/[/?#]/)[0];

              var dateDisplay = "";
              if(date != null) {
                var year = date.substring(0, 4);
                var month = date.substring(4, 6);
                var day = date.substring(6, 8);
                var hour = date.substring(9, 11);
                var min = date.substring(11, 13);
                var sec = date.substring(13, 15);
                var dateDisplay = year + "-" + month + "-" + day + " " + hour + ":" + min + ":" + sec;
              }

                container.append("<br /><a href='" + newsUrl + "' target='_blank'>" + title + "</a>" + "<br /><div class='watson_author'>" + domain + ", " + ", " + dateDisplay + "</div><br /><div class='concepts'>" + "Concepts: " + conceptInfor + "</div>");

            }
        } else {
            container.append("No relevant news found.");
        }
    }
 

    // Performs the asynchronous request to the proxy using JQuery
    $(function() {
        $(".go").click(function() {

            // Set the proxy endpoint, and get the params from the input box
            var endpoint = "/proxy/an/";
            var timelen = $("select[name='time']").val();
            var start = "now-" + timelen;
            var end = "now";
            var maxResults = "5";
            var subtitle = "<%= subject.title %>";
          /*
          ** The parameter "Entity.type" is configurable. 
          ** If left empty, AchemyNews will search all the news with the specified Entity text.
          ** If Entity type is set, AlchemyNews will only return results containing that entity.
          ** The restriction on entity type can return far more relevant results.
          ** Available Entity Types can be found here: http://www.alchemyapi.com/api/entity/types
          */
          //var qEntity = "|text=" + subtitle + ",type=PrintMedia|";
            var qEntity = "|text=" + subtitle + "|";
            var qSentiment = $("select[name='sentiment']").val();
            var timeSlice = "";
            var returns = "enriched.url.title,enriched.url.url,enriched.url.author,enriched.url.publicationDate,enriched.url.entities,enriched.url.docSentiment,enriched.url.concepts";

            // Let the user know Watson is working on this... 
            $(".result").empty();
            $(".result").empty().append("Getting News...");

            // convert the input into JSON, and submit it to the proxy.
            $.ajax({
                type: "POST",
                url: endpoint,
                data: JSON.stringify({
                    "start": start,
                    "end": end,
                    "maxResults": maxResults,
                    "timeSlice": timeSlice,
                    "qEntity": qEntity,
                    "qSentiment": qSentiment,
                    "returns": returns
                }),
                success: function(response) {
                    console.log(response);
                    try {
                    response = JSON.parse(response);
                    displayModel(response);
                  } catch (e) {
                    console.log(e);
                    $(".result").empty().append("News results unavailable at this time.");
                  }
                    
                },
                failure: function(error) {
                    console.log(error);
                    $(".result").empty().append("News results unavailable at this time.");
                }
            });

        });

    });
</script>
<select id="sentiment_select" name="sentiment">
    <option value="">All</option>
    <option value="positive">positive</option>
    <option value="negative">negative</option>
    <option value="neutral">neutral</option>
</select>
<select id="time_select" name="time">
    <option value="12h">last 12 hours</option>
    <option value="24h">last 24 hours</option>
    <option value="7d">last week</option>
</select>

<input type="button" value="news" id="goButton" class="go" />

<br />
<div class="result"></div>
<script>
    $(document).ready(function() {
        document.getElementById("goButton").click();
    });
</script>
<!-- styling for the HTML output -->
<style>
    .watson_title {
        font-size: 0.9em;
        font-weight: bold;
    }
    
    .watson_author {
        transition: all 0.5s;
        font-size: 0.6em;
        border-bottom: 1px solid transparent;
        padding: 0.2em 0 0em 0;
        margin-right: 0.2em;
        margin-bottom: 0.5em;
        display: inline-block;
        cursor: pointer;
    }
    
    .concepts {
        border-bottom: 1px solid #e6e6e6;
        margin-bottom: 0.9em;
        font-size: 0.8em;
    }
</style>